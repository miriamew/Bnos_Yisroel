function getPeriodStart(division, day, period) {
  var startTimes = []
  if (division === "ms") {
    if (day < 5) {
      startTimes = ["08:45a", "09:28a", "09:58a", "10:52a", "11:39a", "12:23p", "12:53p", "01:40p", "02:44p", "03:31p"]
    }
    if (day == 5) {
      startTimes = ["08:45a", "09:28a", "09:58a", "10:52a", "11:39a"]
    }
  }
  if (division === "hs") {
    if (day < 5) {
      startTimes = ["08:45a", "09:28a", "10:00a", "10:53a", "11:40a", "12:23p", "12:53p", "01:39p", "02:33p", "03:27p", "04:13p"]
    }
    if (day == 5) {
      startTimes = ["08:45a", "09:26a", "09:56a", "10:46a", "11:30a"]
    }
  }
  return startTimes[period - 1]
}
function getPeriodEnd(division, day, period) {
  var endTimes = []
  if (division === "ms") {
    if (day < 5) {
      endTimes = ["09:28a", "09:58a", "10:42a", "11:36a", "12:23p", "12:53p", "01:37p", "02:24p", "03:28p", "04:14p"]
    }
    if (day == 5) {
      endTimes = ["09:28a", "09:58a", "10:42a", "11:36a", "12:23p"]
    }
  }
  if (division === "hs") {
    if (day < 5) {
      endTimes = ["09:28a", "10:00a", "10:43a", "11:36a", "12:23p", "12:53p", "01:35p", "02:21p", "03:15p", "04:09p", "04:55p"]
    }
    if (day == 5) {
      endTimes = ["09:26a", "09:56a", "10:36a", "11:26a", "12:10p"]
    }
  }
  return endTimes[period - 1]
}
function newmonth(date, personsheet) {
  try {
    var lastRow = personsheet.getLastRow();
    lastrow = personsheet.getRange(lastRow, 1, 1, 13).getValues()
    let d1 = new Date(lastrow[0][2])
    let d2 = new Date(date);
    if (String(d1.getMonth()) != String(d2.getMonth())) {
      months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
      personsheet.appendRow([months[d2.getMonth()]]);
      var lastRow = personsheet.getLastRow();
      personsheet.getRange(lastRow, 1, 1, 14).setBackground('#a9a9a9');
    }
  }
  catch (error) {
  }
}
function calculateTimes(time1, time2, division) {
  minutes = subtractTimes(time1, time2)
  if (division == "es" || division == "ps") {
    if (minutes < 6) {
      minutes = 0
    }
  }
  if (minutes <= 0) {
    return ("")
  }
  else { return minutes }
}
function convertArmy(time) {
  if (time[5] === "p") {
    if (time[0] === "1" && time[1] === "2") {
      time = time;
    }
    else {
      time = String(parseInt(time[0]) + 1) + String(parseInt(time[1]) + 2) + time.slice(2);
    }
  }
  return time
}

function subtractTimes(inTime, shouldstart) {
  inTime = convertArmy(inTime)
  shouldstart = convertArmy(shouldstart)
  results = ((parseInt(inTime[0] + inTime[1]) - parseInt(shouldstart[0] + shouldstart[1])) * 60 +
    (parseInt(inTime[3] + inTime[4]) - parseInt(shouldstart[3] + shouldstart[4])));
  return results
}

function getFormInfo(name, date, situation) {
  for (i = 1; i < formsheetdata.length; i++) {
    var responses = formsheetdata[i];
    var dateresponse = responses[1]
    if (String(dateresponse) == String(date)) {
      var nameresponse = responses[3]
      if (nameresponse == name) {
        var absentresponse = responses[4];
        if (absentresponse == "Came late" && situation == "Present") {
          formsheetdata.splice(i, 1)
          var t1 = new Date(responses[5]);
          time1 = formatTime(t1)
          return [time1, "", responses[6]];
        }
        if (absentresponse == "Left early" && situation == "Present") {
          formsheetdata.splice(i, 1)
          var t1 = new Date(responses[5]);
          time1 = formatTime(t1)
          return ["", time1, responses[6]];
        }
        if (absentresponse == "Left and came back" && situation == "Normal") {
          formsheetdata.splice(i, 1)
          var t1 = new Date(responses[5]);
          var t2 = new Date(responses[6]);
          time1 = formatTime(t1)
          time2 = formatTime(t2)
          return [time1, time2, responses[7]];
        }
        if (absentresponse == "Absent" && situation == "Absent") {
          formsheetdata.splice(i, 1)
          return ["", "", responses[5]]
        }
        if (absentresponse == "Forgot to clock in" && situation == "Didn't clock IN") {
          formsheetdata.splice(i, 1)
          var t1 = new Date(responses[5]);
          time1 = formatTime(t1)
          return [time1, "", responses[6]];
        }
        if (absentresponse == "Forgot to clock out" && situation == "Didn't clock OUT") {
          formsheetdata.splice(i, 1)
          var t2 = new Date(responses[5]);
          time2 = formatTime(t2)
          return ["", time2, responses[6]];
        }
        if (absentresponse == "Forgot to clock in and out" && situation == "Absent") {
          formsheetdata.splice(i, 1)
          var t1 = new Date(responses[5]);
          var t2 = new Date(responses[6]);
          //console.log(responses)
          time1 = formatTime(t1)
          time2 = formatTime(t2)
          return [time1, time2, responses[7]];
        }
      }
    }
  }
  return ["", "", ""]
}

function getAdminInfo(division, date, period) {
  division = division.toUpperCase()
  for (i = 1; i < formsheetdata.length; i++) {
    var responses = formsheetdata[i];
    var dateresponse = responses[1]
    if (String(dateresponse) == String(date)) {
      if (responses[2] == "Admin") {
        if (responses[3] == "Whole School") {
          if (responses[4] == "No") {
            //console.log("No School")
            return ["No School", ""]
          }
          if (responses[4] == "Yes") {
            return [responses[5], responses[6]]
          }
        }
        if ((responses[3] == "ES" || responses[3] == "PS") && (responses[3] == division)) {
          var t1 = new Date(responses[4]);
          var t2 = new Date(responses[5]);
          //console.log(responses)
          time1 = formatTime(t1)
          time2 = formatTime(t2)
          return [time1, time2];
        }

        if ((responses[3] == "MS" || responses[3] == "HS") && (responses[3] == division)) {
          periods = String(responses[4]).split(', ');
          for (i = 0; i < periods.length; i++) {
            period2 = periods[i]

            if (period2 == period) {
              return ["Off", ""]
            }
          }

        }
      }
    }
  }
  return ["", ""]
}

function formatTime(date) {
  console.log(date)
  let hours = date.getHours();
  let minutes = date.getMinutes()
  console.log(minutes)
  minutes = minutes.toString().padStart(2, '0');
  console.log(minutes)
  let ampm = (hours >= 12) ? 'p' : 'a';
  hours = hours % 12;
  hours = hours ? hours : 12; // The hour '0' should be '12'
  let hoursStr = hours.toString().padStart(2, '0');
  return `${hoursStr}:${minutes}${ampm}`;
}

function diffschedule(change, newtime, oldtime) {
  if (change === "late") {
    if (subtractTimes(newtime, oldtime) > 0) {
      return newtime
    }
    else { return oldtime }
  }//make sure to return in not army time 
  if (change === "early") {
    if (subtractTimes(newtime, oldtime) < 0) {
      return newtime
    }
    else { return oldtime }
  }
}
function checkSame(savedrow, row, savedperiod, period) {

  if ((String(savedrow[0]) == String(row[0])) && (String(savedrow[1]) == String(row[1])) && (String(savedrow[2]) == String(row[2])) && (String(savedrow[3]) == String(row[3])) && (String(savedrow[4]) == String(row[4])) && (String(savedperiod) == String(period))) {
    return "Same"
  }
  else {
    return "Not"
  }
}
function calendarChange(shouldstart, shouldend, today, division) {

  if (String(today).substring(4, 10) === "Dec 25" || String(today).substring(4, 10) === "Dec 26" || String(today).substring(4, 10) === "Dec 31" || String(today).substring(4, 10) === "Jan 01") {
    shouldend = diffschedule("early", "04:15p", shouldend)
  }
  if (String(today).substring(4, 10) === "Jan 10" && (division == "ps" || divison == "es" || division == "office")) {
    shouldend = diffschedule("early", "11:30a", shouldend)
  }
  if (String(today).substring(4, 10) === "Jan 10" && (division == "hs" || divison == "ms")) {
    shouldend = diffschedule("early", "12:30p", shouldend)
  }
  if (String(today).substring(4, 10) === "Mar 13" && (division == "ps" || divison == "es" || division == "office")) {
    shouldend = diffschedule("early", "12:00p", shouldend)
  }
  if (String(today).substring(4, 10) === "Mar 13" && (division == "hs" || divison == "ms")) {
    shouldend = diffschedule("early", "12:30p", shouldend)
  }
  if (String(today).substring(4, 10) === "May 04") {
    shouldstart = diffschedule("late", "10:45a", shouldstart)
  }
  return (shouldstart, shouldend)
}
function changeInCalendar(today) {
  if (String(today).substring(4, 10) === "Oct 02" || String(today).substring(4, 10) === "Oct 03" || String(today).substring(4, 10) === "Oct 04" || String(today).substring(4, 10) === "Oct 11" || String(today).substring(4, 10) === "Oct 15" || String(today).substring(4, 10) === "Oct 16" || String(today).substring(4, 10) === "Oct 17" || String(today).substring(4, 10) === "Oct 18" || String(today).substring(4, 10) === "Oct 21" || String(today).substring(4, 10) === "Oct 22" || String(today).substring(4, 10) === "Oct 23" || String(today).substring(4, 10) === "Oct 24" || String(today).substring(4, 10) === "Oct 25" || String(today).substring(4, 10) === "Nov 11" || String(today).substring(4, 10) === "Nov 28" || String(today).substring(4, 10) === "Nov 29" || String(today).substring(4, 10) === "Dec 27" || String(today).substring(4, 10) === "Dec 30" || String(today).substring(4, 10) === "Feb 06" || String(today).substring(4, 10) === "Feb 07" || String(today).substring(4, 10) === "Feb 10" || String(today).substring(4, 10) === "Feb 11" || String(today).substring(4, 10) === "Mar 14" || String(today).substring(4, 10) === "Apr 07" || String(today).substring(4, 10) === "Apr 08" || String(today).substring(4, 10) === "Apr 09" || String(today).substring(4, 10) === "Apr 10" || String(today).substring(4, 10) === "Apr 11" || String(today).substring(4, 10) === "Apr 14" || String(today).substring(4, 10) === "Apr 15" || String(today).substring(4, 10) === "Apr 16" || String(today).substring(4, 10) === "Apr 17" || String(today).substring(4, 10) === "Apr 18" || String(today).substring(4, 10) === "Apr 21" || String(today).substring(4, 10) === "May 26" || String(today).substring(4, 10) === "Jun 02" || String(today).substring(4, 10) === "Jun 03" || (getAdminInfo(line[3], today, period)[0] == "No School") || (getAdminInfo(line[3], today, period)[0] == "Off")) {
    return true
  }
  else {
    return false
  }
}
function clearSubSheet() {
  formsheet.getRange(2, 1, formsheet.getLastRow(), formsheet.getLastColumn()).clear()
}
